# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: release version
      release-notes:
        type: string
        required: true
        description: description of the release
      jellyfin-release:
        type: string
        required: true
        description: jellyfin release number

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Build
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: |
          dotnet test ./tests/Jellyfin.Plugin.Crunchyroll.Tests/Jellyfin.Plugin.Crunchyroll.Tests.csproj --configuration Release --no-build --verbosity normal
          dotnet test ./tests/Jellyfin.Plugin.Crunchyroll.Tests.Integration/Jellyfin.Plugin.Crunchyroll.Tests.Integration.csproj --configuration Release --no-build --verbosity normal
          dotnet test ./tests/Jellyfin.Plugin.Crunchyroll.Tests.Integration.WaybackMachine/Jellyfin.Plugin.Crunchyroll.Tests.Integration.WaybackMachine.csproj --configuration Release --no-build --verbosity normal

      - name: Create artifact
        id: artifact
        run: |
          zip -r -j Jellyfin.Plugin.Crunchyroll-${{ inputs.version}}.zip src/Jellyfin.Plugin.Crunchyroll/bin/Release/net8.0/*
          MD5HASH=($(md5sum Jellyfin.Plugin.Crunchyroll-${{ inputs.version}}.zip))
          echo checksum=${MD5HASH} >> $GITHUB_OUTPUT

      # Add Release to manifest.json
      - name: Add version to manifest.json
        run: |
          VERSION='${{ inputs.version}}'
          TIMESTAMP=$(date --utc +%FT%TZ)
          jq '.[0].versions += [{"version": ''"'"${VERSION//v}"'"'', "changelog": "${{ inputs.release-notes}}", "targetAbi": "${{ inputs.jellyfin-release}}", "sourceUrl": "https://github.com/Divi-0/Jellyfin.Plugin.Crunchyroll/releases/download/${{ inputs.version}}/Jellyfin.Plugin.Crunchyroll-${{ inputs.version}}.zip", "checksum": ''"'"${{ steps.artifact.outputs.checksum }}"'"'', "timestamp": ''"'"${TIMESTAMP}"'"''}]' manifest.json > manifest.json
          echo $(cat manifest.json)

      - name: Commit manifest.json
        id: manifest
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          
          echo $(git status)
          
          git commit -m "Added version ${{ inputs.version}} to manifest.json" manifest.json
          git push
          echo commit=$(git rev-parse HEAD) >> $GITHUB_OUTPUT

      # Release
      - name: Create Release
        # You may pin to the exact commit or the version.
        # uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: Jellyfin.Plugin.Crunchyroll-${{ inputs.version}}.zip
          # An optional body for the release.
          body: ${{ inputs.release-notes}}
          # An optional commit reference. This will be used to create the tag if it does not exist.
          commit: ${{ steps.manifest.outputs.commit }}
          # An optional name for the release. If this is omitted the tag will be used.
          name: ${{ inputs.version}}
          tag: ${{ inputs.version}}
